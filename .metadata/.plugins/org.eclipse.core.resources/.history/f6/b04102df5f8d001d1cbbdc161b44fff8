package kr.go.mofa.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.go.mofa.dto.QnaDTO;
import kr.go.mofa.service.QnaService;

@Controller
@RequestMapping("/qna/")
public class QnaController {
	
	@Autowired
	QnaService qnaService;
	
	@GetMapping("list")
	public String qnaList(Model model) throws Exception {
		List<QnaDTO> qna = qnaService.qnaList();
		model.addAttribute("qna", qna);
		return "qna/list";
	}
	
	/*
	 * @GetMapping("one")
	 * 
	 * @Transactional public String qnaOne(@RequestParam("no") int no, Model model)
	 * throws Exception { qnaService.updateHits(no); QnaDTO dto =
	 * qnaService.qnaOne(no); model.addAttribute("dto", dto); return "qna/one"; }
	 * 
	 * @GetMapping("add.do") public String qnaAdd() throws Exception { return
	 * "qna/add"; }
	 * 
	 * @PostMapping("add.do") public String qna(HttpServletRequest request, Model
	 * model) throws Exception { QnaDTO qna = new QnaDTO();
	 * qna.setTitle(request.getParameter("title"));
	 * qna.setContent(request.getParameter("content"));
	 * qna.setDept(request.getParameter("dept")); qnaService.addQna(qna);
	 * System.out.println(qna); return "redirect:/qna/list"; }
	 * 
	 * @GetMapping("upd.do")
	 * 
	 * @Transactional public String qna(@RequestParam("no") int no, Model model)
	 * throws Exception { QnaDTO dto = qnaService.qnaOne(no);
	 * model.addAttribute("dto", dto); return "qna/update"; }
	 * 
	 * @PostMapping("upd.do") public String boardUpd(HttpServletRequest request,
	 * Model model) throws Exception { int no =
	 * Integer.parseInt(request.getParameter("no")); QnaDTO qna = new QnaDTO();
	 * qna.setNo(no); qna.setTitle(request.getParameter("title"));
	 * qna.setContent(request.getParameter("content")); qnaService.updQna(qna);
	 * return "redirect:/qna/list"; }
	 * 
	 * @GetMapping("del.do") public String qnaDel(HttpServletRequest request) throws
	 * Exception { int no = Integer.parseInt(request.getParameter("no"));
	 * qnaService.delQna(no); return "redirect:/qna/list"; }
	 */
}
