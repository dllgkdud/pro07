package kr.go.mofa.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.go.mofa.dto.UsersDTO;
import kr.go.mofa.service.UsersService;

@Controller
@RequestMapping("/user/")
public class UsersController {
	
	@Autowired
	UsersService usersService;
	HttpSession session;
	
	@Inject
	BCryptPasswordEncoder pwdEncoder;
	
	
	@GetMapping("list")
	public String usersList(Model model) throws Exception {
		List<UsersDTO> user = usersService.usersList();
		model.addAttribute("user", user);
		return "users/list";
	}
	
	@GetMapping("add.do")
	public String users() throws Exception {
		return "users/add";
	}
	
	@PostMapping("add.do")
	public String usersAdd(HttpServletRequest req, RedirectAttributes rttr, UsersDTO dto, Model model) throws Exception {
		//암호화
		String pw = dto.getPw();
		String pwd = pwdEncoder.encode(pw);
		dto.setPw(pwd);
		usersService.usersAdd(dto);
		
		//service에서 로그인 처리 반환
		boolean login = usersService.login(req);
		if(login) {		
			return "home";
		} else {
			return "redirect:add.do";
		}
		return "redirect:/";
	}
}
