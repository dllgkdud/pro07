package kr.go.mofa;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.go.mofa.dto.SampleDTO;

@Controller
//@Controller + @ResponseBody = @RestController
@RequestMapping("/api/")
public class RestTest {
	private final Logger log = LoggerFactory.getLogger(RestTest.class);
	
	@Autowired
	RestService restService;
	
	@GetMapping("api1")
	public String api1() {
		return "api/api";
	}
	
	//일반 String 방식으로 변환
	@ResponseBody
	@GetMapping("test1")
	public String test1(HttpServletRequest request) {
		log.info("URL Test : "+request.getRequestURL());
		log.info("URI Test : "+request.getRequestURI());
		log.info("JAVA Class : "+this.getClass().getName());
		return "application request url";
	}
	
	//JSON 형태로 변환 - Map
	@ResponseBody
	@GetMapping("test2/{id}/{pw}")
	public Map<String, String> test2(@PathVariable("id") String id, @PathVariable("pw") String pw) {
		Map<String, String> res = new HashMap<>();
		res.put(id, pw);
		return res;
	}
	
	//JSON 형태로 변환 - List
	@ResponseBody
	@GetMapping("test3/{id}")
	public List<String> test3(@PathVariable("id") String id) {
		List<String> lst = new ArrayList<>();
		for(int i=0;i<5;i++) {
			lst.add(id+i);
		}
		return lst;
	}
	
	//Service에서 처리해 JSON 형태로 변환 - Map
	@ResponseBody
	@GetMapping("test4/{id}/{pw}")
	public Map<String, String> test4(@PathVariable("id") String id, @PathVariable("pw") String pw) {
		Map<String, String> res = restService.getTest1(id, pw);
		return res;
	}
	
	//Service에서 처리해 JSON 형태로 변환 - List
	@ResponseBody
	@GetMapping("test5/{id}")
	public List<String> test5(@PathVariable("id") String id) {
		List<String> lst = restService.getTest2(id);
		return lst;
	}
	
	//Service에서 처리해 JSON 형태로 변환 - List
	@ResponseBody
	@GetMapping("list")
	public List<SampleDTO> test6() throws Exception {
		List<SampleDTO> lst = restService.sampleList();
		return lst;
	}
	
	//Service에서 처리해 JSON 형태로 변환 - Object
	@ResponseBody
	@GetMapping("user/{id}")
	public SampleDTO test7(@PathVariable("id") String id) throws Exception {
		SampleDTO user = restService.getSample(id);
		return user;
	}
	
	//add sample
	@PostMapping("add")
	@ResponseBody
	public SampleDTO add(@ModelAttribute("sample") SampleDTO sample) throws Exception {
		restService.addSample(sample);
		return sample;
	}
	
	//upd sample
	//uri:localhost:8097/upd/{id}
	@PutMapping("upd")
	@ResponseBody
	public String updSample(@ModelAttribute("sample") SampleDTO sample) throws Exception {
		restService.updSample(sample);
		return "수정 성공";
	}
	
	//del sample
	//uri:localhost:8097/del/{id}
	@DeleteMapping("del")
	@ResponseBody
	public String delSample(@PathVariable String id) throws Exception {
		restService.delSample(id);
		return "삭제 성공";
	}
}
